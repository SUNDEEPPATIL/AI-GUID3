import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import Tooltip from './Tooltip';
const CompareTray = ({ items, onCompare, onRemove, onClear }) => {
    const canCompare = items.length >= 2;
    return (_jsx("div", { className: "fixed bottom-4 left-1/2 -translate-x-1/2 w-[calc(100%-2rem)] max-w-4xl z-20", children: _jsxs("div", { className: "bg-gray-800/80 backdrop-blur-sm border border-gray-700/50 rounded-xl shadow-2xl p-3 flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-2 flex-1", children: [_jsx("span", { className: "font-bold text-white text-sm mr-2", children: "Comparing:" }), _jsxs("div", { className: "flex items-center gap-2 flex-wrap", children: [items.map(item => (_jsxs("div", { className: "bg-gray-700 text-xs text-white px-2 py-1 rounded-full flex items-center gap-1.5", children: [_jsx("span", { children: item.modelName }), _jsx(Tooltip, { text: `Remove ${item.modelName}`, children: _jsx("button", { onClick: () => onRemove(item), className: "text-gray-400 hover:text-white leading-none", "aria-label": `Remove ${item.modelName} from compare`, children: "\u00D7" }) })] }, item.modelName))), items.length < 3 && Array.from({ length: 3 - items.length }).map((_, i) => (_jsx("div", { className: "hidden sm:block w-20 h-6 bg-gray-700/50 rounded-full animate-pulse" }, i)))] })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Tooltip, { text: "Clear all items", children: _jsx("button", { onClick: onClear, className: "text-gray-400 hover:text-white text-sm font-semibold px-3 py-2 rounded-lg transition-colors", children: "Clear" }) }), _jsx(Tooltip, { text: canCompare ? 'Compare selected items' : 'Add at least 2 items to compare', children: _jsxs("button", { onClick: onCompare, disabled: !canCompare, className: `px-4 py-2 rounded-lg font-bold text-sm transition-all duration-200 ${canCompare
                                    ? 'bg-cyan-500 text-white shadow-lg hover:bg-cyan-400'
                                    : 'bg-gray-600 text-gray-400 cursor-not-allowed'}`, children: ["Compare (", items.length, ")"] }) })] })] }) }));
};
export default CompareTray;
